{"version":3,"sources":["mfBase.js","components/AuthForm.js","routes/Auth.js","components/Cweet.js","components/CweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","firebase","authService","auth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","password","form","setForm","newAccount","setNewAccount","error","setError","onChange","target","name","value","onSubmit","e","a","preventDefault","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","className","type","required","placeholder","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Cweet","cweetObj","isOwner","editing","setEditing","text","editCweet","setEditCweet","onDeleteClick","window","confirm","CweetTextRef","doc","id","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","CweetFactory","userObj","cweet","setCweet","attachment","setAttachment","fileInput","useRef","tempAttachmentName","uid","v4","attachtmentRef","uploadString","getDownloadURL","addDoc","collection","creatorId","createdAt","serverTimestamp","current","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","cweets","setCweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","data","marginTop","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de08046b.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport * as auth from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = auth;\n\nexport const dbService = getFirestore();\n\nexport const storageService = getStorage();","import React, { useState } from 'react';\nimport { authService } from 'mfBase';\n\nconst AuthForm = () => {\n\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = ({ target: { name, value } }) => {\n    setForm({\n      ...form,\n      [name]: value\n    });\n  }\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n\n      const auth = authService.getAuth();\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(\n          auth, form.email, form.password\n        )\n      } else {\n        await authService.signInWithEmailAndPassword(\n          auth, form.email, form.password\n        )\n      }\n\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  const toggleAccount = () => {\n    setNewAccount(prev => !prev);\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className='container'>\n        <input\n          name='email'\n          type='email'\n          value={form.email}\n          required\n          placeholder='Email'\n          onChange={onChange}\n          className='authInput'\n        />\n        <input\n          name='password'\n          type='password'\n          value={form.password}\n          required\n          placeholder='Password'\n          onChange={onChange}\n          className='authInput'\n        />\n        <input\n          type='submit'\n          className='authInput authSubmit'\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className='authError'>{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className='authSwitch'>\n        {newAccount ? 'Sign in' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;","import React from 'react';\nimport { authService } from 'mfBase';\nimport AuthForm from 'components/AuthForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n\n  const onSocialClick = async e => {\n    const { target: { name },\n    } = e;\n\n    let provider;\n    const auth = authService.getAuth();\n\n    if (name === 'google') {\n      provider = new authService.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new authService.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(auth, provider);\n  }\n\n  return (\n    <div className='authContainer'>\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size='3x'\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className='authBtns'>\n        <button onClick={onSocialClick} name='google' className='authBtn'>\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name='github' className='authBtn'>\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n\n","import { deleteDoc, doc, updateDoc } from '@firebase/firestore';\nimport { deleteObject, ref } from '@firebase/storage';\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { dbService, storageService } from 'mfBase';\nimport React, { useState } from 'react';\n\nconst Cweet = ({ cweetObj, isOwner }) => {\n\n  const [editing, setEditing] = useState(false);\n  const [editCweet, setEditCweet] = useState(cweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this cweet?');\n\n    if (ok) {\n      //리터럴\n      const CweetTextRef = doc(dbService, 'cweets', `${cweetObj.id}`);\n\n      // delete 부분\n      await deleteDoc(CweetTextRef);\n\n      if (cweetObj.attachmentUrl) {\n        await deleteObject(ref(storageService, cweetObj.attachmentUrl));\n      }\n    }\n  }\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  }\n\n  const onSubmit = async (e) => {\n    const CweetTextRef = doc(dbService, 'cweets', `${cweetObj.id}`);\n\n    await updateDoc(CweetTextRef, {\n      text: editCweet,\n    });\n\n    setEditing(false);\n  }\n\n  const onChange = e => {\n    const { target: { value } } = e;\n    setEditCweet(value);\n  }\n\n  return (\n    <div className='cweet'>\n      {/* <span>{moment(cweet.createdAt.seconds * 1000).format('YYYY년 MM월 DD일 hh시 mm분')}</span> */}\n      {editing ? (\n        <>\n          { isOwner && (\n            <>\n              <form onSubmit={onSubmit} className='container cweetEdit'>\n                <input\n                  type='text'\n                  value={editCweet}\n                  placeholder='Edit your Cweet'\n                  onChange={onChange}\n                  autoFocus\n                  required\n                  className='formInput'\n                />\n                <input type='submit' value=\"Update Cweet\" className='formBtn' />\n              </form>\n              <span onClick={toggleEditing} className='formBtn cancelBtn'>\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{cweetObj.text}</h4>\n            {cweetObj.attachmentUrl && <img src={cweetObj.attachmentUrl} alt='images' />}  \n            {isOwner && (\n              <div className='cweet__actions'>\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Cweet;","import React, { useRef, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { getDownloadURL, ref, uploadString } from '@firebase/storage';\nimport { addDoc, collection, serverTimestamp } from '@firebase/firestore';\nimport { storageService, dbService } from 'mfBase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst CweetFactory = ({ userObj }) => {\n  \n  const [cweet, setCweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const fileInput = useRef();\n\n  const onSubmit = async (e) => {\n    if (cweet === '') {\n      return;\n    }\n    e.preventDefault();\n    let attachmentUrl = '';\n    if(attachment) { \n      const tempAttachmentName = userObj.uid+'/'+v4();\n\n      const attachtmentRef = ref(storageService, `${tempAttachmentName}`);\n      await uploadString(attachtmentRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(ref(storageService, `${tempAttachmentName}`));\n    }\n    await addDoc(collection(dbService, \"cweets\"), {\n      creatorId: userObj.uid,\n      text: cweet,\n      createdAt: serverTimestamp(),\n      attachmentUrl,\n    });\n\n    setCweet('');\n    fileInput.current.value = null;\n    setAttachment(null);\n  }\n\n  const onChange = e => {\n    const { target: { value } } = e;\n    setCweet(value);\n  }\n\n  const onFileChange = e => {\n    const {\n      target: { files }\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = (finishedEvent) => {\n      const { currentTarget: { result } } = finishedEvent\n      setAttachment(result);\n    }\n\n    reader.readAsDataURL(theFile);\n  }\n\n  const onClearAttachmentClick = () => {\n    fileInput.current.value = null;\n    setAttachment('');\n  }\n\n  return (\n    <form onSubmit={onSubmit} className='factoryForm'>\n      <div className='factoryInput__container'>\n        <input\n          type='text'\n          value={cweet}\n          onChange={onChange}\n          placeholder='Whats on your mind?'\n          maxLength={120}\n          className='factoryInput__input'\n        />\n        <input type='submit' value='&rarr;' className='factoryInput__arrow' />\n      </div>\n      <label for='attach-file' className='factoryInput__label'>\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id='attach-file'\n        type='file'\n        accept='image/*'\n        ref={fileInput}\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className='factoryForm__attachment'>\n          <img src={attachment} alt='thumbnail' style={{ backgroundImage: attachment }} />\n          <div className='factoryForm__clear' onClick={onClearAttachmentClick}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default CweetFactory;","import { collection, onSnapshot, orderBy, query } from '@firebase/firestore';\n// import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { dbService } from 'mfBase';\nimport Cweet from 'components/Cweet';\nimport CweetFactory from 'components/CweetFactory';\n\nconst Home = ({ userObj }) => {\n  \n  const [cweets, setCweets] = useState([]);\n  \n  useEffect(() => {\n    const q = query(\n      collection(dbService, 'cweets'),\n      orderBy('createdAt', 'desc')\n    );\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const newArray = querySnapshot.docs.map(doc => {\n        // moment(doc.data().).format('YYYY년 MM월 DD일')\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setCweets(newArray);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  \n  return (\n    <div className='container'>\n      <CweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {\n          cweets.map(cweet =>\n            <Cweet key={cweet.id} cweetObj={cweet} isOwner={cweet.creatorId === userObj.uid ? true : false} />\n          )\n        }\n      </div>\n    </div>\n  )\n}\nexport default Home;","import React, { useState } from 'react';\nimport { authService } from 'mfBase';\nimport { useHistory } from 'react-router';\n// import { collection, getDocs, orderBy, query, where } from '@firebase/firestore';\nimport { updateProfile } from '@firebase/auth';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  \n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    const auth = authService.getAuth();\n    authService.signOut(auth);\n    history.push('/');\n\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(authService.getAuth().currentUser, { displayName: newDisplayName });\n    }\n\n    refreshUser();\n  }\n\n  const onChange = e => {\n    const { target: { value } } = e;\n    setNewDisplayName(value);\n  }\n\n  return (\n    <div className='container'>\n      <form onSubmit={onSubmit} className='profileForm'>\n        <input\n          type='text'\n          placeholder='Display Name'\n          onChange={onChange}\n          autoFocus\n          value={newDisplayName}\n        />\n        <input\n          type=\"submit\"\n          value='Update Profile'\n          className='formBtn'\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <input className='formBtn cancelBtn logOut' onClick={onLogOutClick} value='Sign Out'/>\n    </div>\n  );\n\n}\n\n\nexport default Profile;\n\n\n  // const getMyCweets = async () => {\n\n  //   const q = query(\n  //     collection(dbService, \"cweets\"),\n  //     where(\"creatorId\", \"==\", userObj.uid),\n  //     orderBy('createdAt', 'desc')\n  //   );\n\n  //   const querySnapshot = await getDocs(q);\n  //   querySnapshot.forEach((doc) => {\n  //     // doc.data() is never undefined for query doc snapshots\n  //     console.log(doc.id, \" => \", doc.data());\n  //   });\n  // }\n\n  // useEffect(() => {\n  //   getMyCweets();\n  // }, []);","import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => {\n\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to='/' style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='2x' />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to='/profile'\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size='2x' />\n            <span style={{ marginTop: 10 }} >\n              {userObj.displayName\n                ? `${userObj.displayName}'s Profile`\n                : 'Profile'\n              }\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ?\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path ='/'>\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path ='/profile'>\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div> : \n          <>\n            <Route exact path ='/'>\n              <Auth />\n            </Route>\n          </> }\n      </Switch>\n    </Router>\n  )\n} \n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'mfBase';\nimport { onAuthStateChanged } from '@firebase/auth';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  \n  useEffect(() => {\n    const auth = authService.getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName\n        })\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    setUserObj({\n      uid: authService.getAuth().currentUser.uid,\n      displayName: authService.getAuth().currentUser.displayName\n    })\n  }\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"Initializing...\"}\n      {/* <footer>&copy; {new Date().getFullYear()} Cwitter</footer> */}\n    </>\n  ) \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}